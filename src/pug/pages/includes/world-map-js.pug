script(type="text/javascript").
    fetch('https://disease.sh/v2/countries?yesterday=true&sort=cases', { cache: 'no-cache' })
    .then((response) => response.json())
    .then((data) => {
        countriesData(data);
        window.addEventListener('load', 
            function() { 
                countriesDatatable(data);
                countriesLineData(data)
            }, false);
    });
    function countriesData(data) {
            var mymap = L.map('covidWorldMap').setView([20, 0], 1);
            let mapboxAccessToken = 'pk.eyJ1Ijoic3dhcG5pbDciLCJhIjoiY2s5ZnRtZXh1MGVuYTNkbGNhNWtrcmt0diJ9.fzy5HcciZYupAiuzpVmlWA';
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=' + mapboxAccessToken, {
                id: 'mapbox/dark-v10',
                attribution:
                    'Map data <a href="https://disease.sh/">Novel COVID API</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                minZoom: 0,
                noWrap: true,
                bounds: [[-90, -180],[90, 180]]
            }).addTo(mymap);
            var myRenderer = L.canvas({ padding: 0.5 });
            function htmlPopup(region, regionAlt, confirmed, recovered, deaths){
                let output = '';
                if(region !== null){
                    output+=`<b>${region}</b>`
                }
                else{
                    output+=`<b>${regionAlt}</b>`
                }
                if(confirmed !== null){
                    output +=`<br/>Confirmed: ${confirmed.toLocaleString()}`;
                }
                if(recovered !== null){
                    output +=`<br/>Recovered: ${recovered.toLocaleString()}`;
                }
                if(deaths !== null){
                    output +=`<br/>Deaths: ${deaths.toLocaleString()}`;
                }
                return output
            }
            data.forEach(function(country) {
                var latlng = L.latLng({ lat: country.countryInfo.lat, lng: country.countryInfo.long });
                var circle = L.circleMarker(latlng, {
                    fillOpacity: 0.5,
                    radius: Math.sqrt(country.cases)*0.02,
                    stroke: false,
                    fillColor:'#d11a1a',
                    renderer: myRenderer
                })
                .addTo(mymap)
                .bindTooltip(htmlPopup(country.country, country.iso2, country.cases, country.recovered, country.deaths));
            });

            var info = L.control({position: 'bottomright'});

            info.onAdd = function (map) {
                this._div = L.DomUtil.create('div', 'map-info'); // create a div with a class "info"
                this._div.innerHTML =  '<h4>COVID19 WORLD SPREAD DATA</h4><p class="mb-0">Tap/hover on the marker for more information</p>';
                return this._div
            };
            info.addTo(mymap);
    }