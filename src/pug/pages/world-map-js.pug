
script(type="text/javascript").
    axios
        .get('https://disease.sh/v2/countries?yesterday=true&sort=cases', { cache: 'no-cache' })
        .then((response) => {
            countriesData(response.data);
            window.addEventListener(
                'load',
                function() {
                    countriesDatatableChart(response.data);
                },
                false
            );
        })
        .catch((error) => {
            if (error.response) {
                console.log(
                    'The request was made and the server responded with a status code that falls out of the range of 2xx'
                );
                console.log('Error Data: ', error.response.data);
                console.log('Error Status: ', error.response.status);
                console.log('Error Headers: ', error.response.headers);
            } else if (error.request) {
                console.log(
                    'The request was made but no response was received. `error.request` is an instance of XMLHttpRequest in the browser and an instance of http.ClientRequest in node.js'
                );
                console.log('Error Request: ', error.request);
            } else {
                console.log('Something happened in setting up the request that triggered an Error');
                console.log('Error Message: ', error.message);
            }
            console.log('Error config: ', error.config);
        });
    function countriesData(data) {
        var mymap = L.map('covidWorldMap').setView([ 20, 0 ], 1);
        let mapboxAccessToken =
            'pk.eyJ1Ijoic3dhcG5pbDciLCJhIjoiY2s5ZnRtZXh1MGVuYTNkbGNhNWtrcmt0diJ9.fzy5HcciZYupAiuzpVmlWA';
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=' + mapboxAccessToken, {
            id: 'mapbox/dark-v10',
            attribution:
                'Map data <a target="_blank" href="https://disease.sh/">Novel COVID API</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
            minZoom: 0,
            noWrap: true,
            bounds: [ [ -90, -180 ], [ 90, 180 ] ]
        }).addTo(mymap);
        var myRenderer = L.canvas({ padding: 0.5 });
        function htmlPopup(region, regionCode, confirmed, recovered, deaths) {
            let output = '';
            if (regionCode !== null) {
                output += `<img src="https://www.countryflags.io/${regionCode.toLocaleLowerCase()}/shiny/16.png" style="vertical-align:middle!important; margin-right:2px;"/>`;
            }
            if (region !== null) {
                output += `<b>${region}</b>`;
            } else {
                output += `<b>${regionCode}</b>`;
            }
            if (confirmed !== null) {
                output += `<br/>Confirmed: ${confirmed.toLocaleString()}`;
            }
            if (recovered !== null) {
                output += `<br/>Recovered: ${recovered.toLocaleString()}`;
            }
            if (deaths !== null) {
                output += `<br/>Deaths: ${deaths.toLocaleString()}`;
            }
            return output;
        }
        data.forEach(function(country) {
            var latlng = L.latLng({ lat: country.countryInfo.lat, lng: country.countryInfo.long });
            var circle = L.circleMarker(latlng, {
                fillOpacity: 0.5,
                radius: Math.sqrt(country.cases) * 0.02,
                stroke: false,
                fillColor: '#d11a1a',
                renderer: myRenderer
            })
                .addTo(mymap)
                .bindTooltip(
                    htmlPopup(country.country, country.countryInfo.iso2, country.cases, country.recovered, country.deaths)
                );
        });

        var info = L.control({ position: 'bottomright' });

        info.onAdd = function(map) {
            this._div = L.DomUtil.create('div', 'map-info'); // create a div with a class "info"
            this._div.innerHTML =
                '<h4>COVID19 WORLD SPREAD DATA</h4><p class="mb-0">Tap/hover on the marker for more information</p>';
            return this._div;
        };
        info.addTo(mymap);
    }
